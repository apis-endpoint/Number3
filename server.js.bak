const express = require('express');
const multer = require('multer');
const fs = require('fs');
const path = require('path');
const { v4: uuidv4 } = require('uuid');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());

app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});

const uploadDir = path.join(__dirname, 'files');
if (!fs.existsSync(uploadDir)) {
    fs.mkdirSync(uploadDir);
}

// Multer config
const storage = multer.diskStorage({
    destination: (req, file, cb) => cb(null, uploadDir),
    filename: (req, file, cb) => {
        const ext = path.extname(file.originalname);
        cb(null, uuidv4() + ext);
    }
});
const upload = multer({ storage });

// Upload endpoint
app.post('/api/upload', upload.single('file'), (req, res) => {
    if (!req.file) return res.status(400).json({ error: 'No file uploaded.' });

    const fileUrl = `${req.protocol}://${req.get('host')}/files/${req.file.filename}`;
    res.json({ url: fileUrl });
});

// List files
app.get('/api/files', (req, res) => {
    fs.readdir(uploadDir, (err, files) => {
        if (err) return res.status(500).json({ error: 'Cannot read files.' });
        res.json({ files });
    });
});

// Delete file
app.delete('/api/files/:filename', (req, res) => {
    const filePath = path.join(uploadDir, req.params.filename);
    fs.unlink(filePath, err => {
        if (err) return res.status(404).json({ error: 'File not found.' });
        res.json({ message: 'File deleted successfully.' });
    });
});

// Rename file
app.put('/api/files/:filename', (req, res) => {
    const oldPath = path.join(uploadDir, req.params.filename);
    const newName = req.body.newName;
    if (!newName) return res.status(400).json({ error: 'New name required.' });

    const newPath = path.join(uploadDir, newName);
    fs.rename(oldPath, newPath, err => {
        if (err) return res.status(500).json({ error: 'Rename failed.' });
        res.json({ message: 'File renamed successfully.' });
    });
});

// Serve files
app.use('/files', express.static(uploadDir));

app.listen(PORT, () => {
    console.log(`Server running at http://localhost:${PORT}`);
});